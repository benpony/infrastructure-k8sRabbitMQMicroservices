$ minikube delete
$ minikube start --vm-driver=virtualbox --memory 4096 --cpus 2
$  minikube addons enable ingress

- - -

# install rabbitmq
https://github.com/bitnami/charts/
..
$ helm repo add bitnami https://charts.bitnami.com/bitnami
$ helm search repo bitnami | grep "rabbitmq"
$ helm install my-rmq bitnami/rabbitmq
$ helm delete my-rmq bitnami/rabbitmq

# install and set { user: admin pass: secretpassword }
```
$ helm install rmq \
  --set rabbitmq.username=admin,rabbitmq.password=secretpassword,rabbitmq.erlangCookie=secretcookie \
    stable/rabbitmq
```
## output
Credentials:

    echo "Username      : admin"
    echo "Password      : $(kubectl get secret --namespace default my-rmq-rabbitmq -o jsonpath="{.data.rabbitmq-password}" | base64 --decode)"
    echo "ErLang Cookie : $(kubectl get secret --namespace default my-rmq-rabbitmq -o jsonpath="{.data.rabbitmq-erlang-cookie}" | base64 --decode)"

RabbitMQ can be accessed within the cluster on port  at my-rmq-rabbitmq.default.svc.

To access for outside the cluster, perform the following steps:

To Access the RabbitMQ AMQP port:

    echo "URL : amqp://127.0.0.1:5672/"
    kubectl port-forward --namespace default svc/my-rmq-rabbitmq 5672:5672

To Access the RabbitMQ Management interface:

    echo "URL : http://127.0.0.1:15672/"
    kubectl port-forward --namespace default svc/my-rmq-rabbitmq 15672:15672
..

# build docker images
$ docker build -t <your username>/image-name .
$ docker image rm <your username>/image-name

```
/producer 
$ docker build -t benpony/py-producer . && \
  docker push benpony/py-producer:latest 

/consumer 
$ docker build -t benpony/py-consumer . && \
  docker push benpony/py-consumer:latest 
```

# deployment via helm install
$ helm install -f myvalues.yaml my-release-name .
$ helm install my-release-name .
$ helm uninstall my-release-name 

```
$ helm upgrade --install py-rmq-producer ./deployment
$ helm upgrade --install py-rmq-consumer ./deployment


$ helm uninstall py-rmq-producer && \
  helm install py-rmq-producer ./deployment
```
