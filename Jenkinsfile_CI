#!/usr/bin/env groovy

def label = "docker-jenkins-${UUID.randomUUID().toString()}"

podTemplate(
    label: label,
    serviceAccount: 'jenkins',
    cloud: 'kubernetes',
    containers: [ 
        containerTemplate(
            name: 'docker', 
            image: 'docker', 
            command: 'cat', 
            resourceRequestCpu: '100m',
            resourceLimitCpu: '300m',
            resourceRequestMemory: '300Mi',
            resourceLimitMemory: '500Mi',
            ttyEnabled: true
        ),
        containerTemplate(
            name: 'kubectl', 
            image: 'amaceog/kubectl',
            resourceRequestCpu: '100m',
            resourceLimitCpu: '300m',
            resourceRequestMemory: '300Mi',
            resourceLimitMemory: '500Mi', 
            ttyEnabled: true, 
            command: 'cat'
        ),
        containerTemplate(
            name: 'helm', 
            image: 'alpine/helm:2.14.0', 
            resourceRequestCpu: '100m',
            resourceLimitCpu: '300m',
            resourceRequestMemory: '300Mi',
            resourceLimitMemory: '500Mi',
            ttyEnabled: true, 
            command: 'cat'
        )
    ],
    volumes: [
        hostPathVolume(mountPath: '/var/run/docker.sock', hostPath: '/var/run/docker.sock'),
        hostPathVolume(mountPath: '/usr/local/bin/helm', hostPath: '/usr/local/bin/helm')
    ]) {

    node(label) {
        stage('Checkout Git and Docker Login') {
            timeout(time: 3, unit: 'MINUTES') {
                checkout(
                    [
                        $class: 'GitSCM', 
                        branches: [
                            [name: '*/master']
                        ], 
                        doGenerateSubmoduleConfigurations: false, 
                        extensions: [], 
                        submoduleCfg: [], 
                        userRemoteConfigs: [
                            [url: 'https://github.com/benpony/infrastructure-k8sRabbitMQMicroservices.git']
                        ]
                    ]
                )
            }
        }
        
        stage('Build and push Docker image') {
            container('docker') {
                withCredentials([
                    usernamePassword(
                        credentialsId: 'docker-hub', 
                        usernameVariable: 'DOCKERHUB_USER', 
                        passwordVariable: 'DOCKERHUB_PASSWORD'
                    )
                ]) {
                    sh script: "docker login -u  ${DOCKERHUB_USER} -p ${DOCKERHUB_PASSWORD}"
                }

                echo "Building docker image..."
                sh script: 'docker build ./producer -t benpony/py-producer'
                sh script: 'docker build ./consumer -t benpony/py-consumer'

                 echo "Pushing docker image..."
                sh script: 'docker push benpony/py-consumer:latest'
                sh script: 'docker push benpony/py-producer:latest'
            }
        }

        stage('Deploying Applications') {
            container('helm') { 
                sh 'helm init --upgrade --service-account jenkins --history-max 200'
                
                echo "Creating local chartmuseum repository..."
                sh script: 'helm install chartmuseum stable/chartmuseum'
                sh script: 'helm plugin install https://github.com/chartmuseum/helm-push'
                sh script: 'helm repo add chartmuseum http://localhost:32688'
                
                echo "Packeging helm charts..."
                sh script: 'helm package consumer/deployment/'
                sh script: 'helm package producer/deployment/'

                echo "Pushing helm charts..."
                sh script: 'helm push consumer/deployment/ chartmuseum'
                sh script: 'helm push producer/deployment/ chartmuseum' 

                echo "Deploying charts to cluster..."
                sh 'helm repo update'
                sh script: 'helm upgrade --install consumer chartmuseum/rmqapps-consumer'
                sh script: 'helm upgrade --install consumer chartmuseum/rmqapps-producer'
            }
        } 
    }
}
